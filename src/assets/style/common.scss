@import "utilities";

/*font*/
@each $size, $value in $font-size {
  .font-#{$size} {
    font-size: $value;
  }
}


/*color*/
@each $color, $value in $theme-colors {
  .bg-#{$color} {
    background-color: $value;
    color: $white;

  }

  .text-#{$color} {
    color: $value;

  }
}

/*btn*/
.btn {
  box-sizing: border-box;
  @include fc;
  height: $heightMd;
  display: inline-flex;
  padding: 0 10px;

  & ~ & {
    margin-left: $interval;
  }

  .ic {
    margin-right: 3px;
  }


  @each $color, $value in $theme-colors {
    &.bg-#{$color} {
      background-color: $value;
      color: $white;

      &:hover {
        background-color: darken($value, 10%);
      }
    }


  }


  &.fixed {
    position: fixed;
    width: 100%;
    left: 0;
    bottom: 0;
    margin: 0 !important;
    padding: 0 !important;
  }

}

.pull {
  width: 100% !important;
}

.half {
  width: 48% !important;
}

/*height*/
@each $size, $value in $base-height {
  .#{$size} {
    height: $value;
    font-size: if($size == "xs", 12px, if($size == "md", 12px, 14px));
    // xs sm = 12px,그 외의 14x 적용

    &.radius-half {
      border-radius: $radius30;
    }

    &.radius-circle {
      width: $value !important;
      height: $value;
      border-radius: $radius50;
      display: inline-flex;
      justify-content: center;
      align-items: center;
      // line-height: $value / 3;
    }
  }
}


/*border radius*/

.radius {
  border-radius: $radius;
}

.radius-half {
  border-radius: $radius30;
}

.radius-circle {
  border-radius: $radius50;
}


/*icon*/
.ic {
  @include iconCenter;
  @include iconMd;

  &.xxl {
    @include iconXxl;
  }

  &.xl {
    @include iconXl;
  }

  &.lg {
    @include iconLg;
  }

  &.md {
    @include iconMd;
  }

  &.sm {
    @include iconSm;
  }

  &.xs {
    @include iconXs;
  }
}

/*margin padding  간격*/

@for $i from -6 through 6 {
  .mt-#{$i} {
    margin-top: $interval * $i !important;
  }
}

@for $i from -6 through 6 {
  .mr-#{$i} {
    margin-right: $interval * $i !important;
  }
}

@for $i from -6 through 6 {
  .mb-#{$i} {
    margin-bottom: $interval * $i !important;
  }
}

@for $i from -6 through 6 {
  .ml-#{$i} {
    margin-left: $interval * $i !important;
  }
}

@for $i from -6 through 6 {
  .mx-#{$i} {
    margin: $interval * $i 0 !important;
  }
}

@for $i from -6 through 6 {
  .my-#{$i} {
    margin: 0 $interval * $i !important;
  }
}


@for $i from -6 through 6 {
  .mx-#{$i} {
    padding: $interval * $i 0 !important;
  }
}

@for $i from -6 through 6 {
  .py-#{$i} {
    padding: 0 $interval * $i !important;
  }
}


.skip {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: 0;
  padding: 0;
  background: none;
  font-size: 3px;
  color: transparent;
  line-height: 0;
}

.text-hide {
  font-size: 0;
  text-indent: -99999px;
}

.hide {
  display: none !important;
}

.bg-none {
  background: none;
}

.none {
  display: none !important;
}

.block {
  display: block !important;
}

.inline-block {
  display: inline-block !important;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.text-indent {
  text-indent: -10000000000000000px;
  font-size: 0;
  height: 0;
}

.relative {
  position: relative !important;
}

/* typography */
.bold-100 {
  font-weight: 100;
}

.bold-200 {
  font-weight: 200;
}

.bold-300 {
  font-weight: 300;
}

.bold-400 {
  font-weight: 400;
}

.bold-500 {
  font-weight: 500;
}

.bold-600 {
  font-weight: 600;
}

.bold-700 {
  font-weight: 700;
}

/*text align*/

.tl {
  text-align: left !important;
}

.tc {
  text-align: right !important;
}

.tr {
  text-align: center !important;
}

.vt {
  vertical-align: top;
}

.vm {
  vertical-align: middle;
}

.vb {
  vertical-align: bottom;
}

.text-under {
  text-decoration: underline;
}


.ellipsis {
  display: inline-block;
  width: 98%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  vertical-align: bottom;
}

.ellipsis-line {
  @include ellipsisLine;
}

/*layout align*/

.fl {
  float: left;
}

.fr {
  float: right;
}

.fn {
  float: none;
}

.clear {
  clear: both;
}

/*flex*/
.flex-j {
  @include fj;
  //양쪽 정렬
}

.flex-s {
  @include fs;
  //start 정렬
}

.flex-c {
  @include fc;
  //center 정렬
}

.flex-e {
  @include fe;
  //right 정렬
}

.flex-fsc {
  @include fcs;
  //Y축 꽉찬 정렬
}

.flex-column {
  flex-direction: column;
  //y축 정렬
}

.align-s {
  align-items: start !important;
  //y축 상단 정렬
}

.align-c {
  align-items: center !important;
  //y축 중앙 정렬
}

.align-e {
  align-items: end !important;
  //y축 하단 정렬
}


.flex {
  flex: 1 1 auto;
}

